unit LibraryValesCupones_Invk;

{----------------------------------------------------------------------------}
{ This unit was automatically generated by the RemObjects SDK after reading  }
{ the RODL file associated with this project .                               }
{                                                                            }
{ Do not modify this unit manually, or your changes will be lost when this   }
{ unit is regenerated the next time you compile the project.                 }
{----------------------------------------------------------------------------}

{$I RemObjects.inc}

interface

uses
  {vcl:} Classes,
  {RemObjects:} uROXMLIntf, uROServer, uROServerIntf, uROClasses, uROTypes, uROClientIntf,
  {Used RODL Intf's:} DataAbstract4_Intf,
  {Used RODL Invk's:} DataAbstract4_Invk,
  {Generated:} LibraryValesCupones_Intf;

type
  TSeekOrigin = Classes.TSeekOrigin; // fake declaration
  TServiceValesCupones_Invoker = class(TDataAbstractService_Invoker)
  private
  protected
  public
    constructor Create; override;
  published
    procedure Invoke_AbreDataSetReporte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_FacturaCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ActualizaCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ActualizaCuponConReferencia(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ActualizaLiquidacionCorte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ActualizarStatusValeCredito(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ActualizaStatusCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_BuscaHost(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_BuscaReporte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CambiaFolioFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CancelaFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CancelarCupones(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CierraLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CostoProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosCliente(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Existencia(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_FacturaExpress(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_FacturaID(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_FacturaYLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Fecha(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Folio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_FolioActual(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_FolioActual2(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardaAccesos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardaConsumoExpress(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardaLimiteFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardarDatosFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardarDatosLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardarDatosReciboPago(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardarFacturaExpress(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_InsertaDeposito(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardaDatosFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_InsertaProductoPrecio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Login(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ModificarFolioActual(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ObtenerStatusCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PrefijaCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ObtenerTipoCambioIDPorEstacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ObtenerTipoCambioPorEstacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PrecioProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_StatusTicket(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_SumaAnticipo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_SumaVentasCorte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ValoresTurno(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_VersionServer(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_LiquidacionCerrada(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ClienteValido(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_BuscaOtroProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_TurnoALiquidacionID(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_BuscaSagarpa(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PuntosCalculaSaldo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PuntosCalculaPuntos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PuntosGuardaDatos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PuntosDatos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_EliminaAutomaticosLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_BuscaDespachadorLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_EntregaPremio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosPremio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ValidaConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AgrupacionesBomba(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosCerrarLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ProcesaVentasLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_TicketsLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ValidaFolioFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PuntosGuardaCriterios(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosFacturaElectronica(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_LlavePrivaCertificado(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_SELLOPEMs(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CERs(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ValidaLiquidacionDespachador(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ActualizaLiquidacionProd(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PuntosDespachador(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardarDatosFacturaPemex(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AfectaInventarios(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_InsertaFacturaElectronica(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CERsNUM(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ActualizaFirmaDefault(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_obtendatosempleados(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ProgramaMantenimiento(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_obtendatosActividadesProgramadas(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_obtenNotificacionesDiarias(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_registraactividadrealizada(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CancelarLote(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_StatusCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_BuscarReporte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GeneraCupones(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DocumentosConSaldo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_FacturaRecibo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CaracteresCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ObtenCuponValido(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardaAutorizacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosVehiculo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CancelaGrupo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_QuemarCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardarConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosVerifica(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosVerificaReferencia(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_TarjetaConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ActualizaHistorial(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_EliminaAutorizacionVehiculo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AgregaSecuencias(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AutorizaTarjeta(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_BuscaAutorizacionTarjeta(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_EstadoDispensario(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_EntradaBitacora(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AutoCambioPrecio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CierraTurno(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CreaTurno(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardaVenta(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_UltimoTurnoBomba(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ValidaSecuencias(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ValidaSecuenciasC(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Datos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CancelaGrupoC(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PrefijaGrupo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PrefijaTarjeta(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AsignaBombas(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AsignaProductos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AsignaDispositivo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AsignaTanques(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_IncrementarImpreso(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PrefijaTarjetaFrecuente(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GenerarFacturas(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_EliminaFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CambioFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GeneraFacturasXCliente(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GasolineroID(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
  end;

implementation

uses
  {RemObjects:} uRORes, uROClient;

{ TServiceValesCupones_Invoker }

constructor TServiceValesCupones_Invoker.Create;
begin
  inherited Create;
  FAbstract := False;
end;

procedure TServiceValesCupones_Invoker.Invoke_AbreDataSetReporte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function AbreDataSetReporte(const SQL: AnsiString; const Parametros: TParametros): Binary; }
var
  SQL: AnsiString;
  Parametros: LibraryValesCupones_Intf.TParametros;
  lResult: Binary;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  Parametros := nil;
  lResult := nil;
  try
    __Message.Read('SQL', TypeInfo(AnsiString), SQL, []);
    __Message.Read('Parametros', TypeInfo(LibraryValesCupones_Intf.TParametros), Parametros, []);

    lResult := (__Instance as IServiceValesCupones).AbreDataSetReporte(SQL, Parametros);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'AbreDataSetReporteResponse');
    __Message.Write('Result', TypeInfo(Binary), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Parametros);
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_FacturaCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function FacturaCupon(const Cliente: Integer; const Importe: Double; const EstacionID: Integer; const EmpleadoID: Integer;
                          const SerieFactura: AnsiString): Integer; }
var
  Cliente: Integer;
  Importe: Double;
  EstacionID: Integer;
  EmpleadoID: Integer;
  SerieFactura: AnsiString;
  lResult: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Cliente', TypeInfo(Integer), Cliente, []);
    __Message.Read('Importe', TypeInfo(Double), Importe, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('EmpleadoID', TypeInfo(Integer), EmpleadoID, []);
    __Message.Read('SerieFactura', TypeInfo(AnsiString), SerieFactura, []);

    lResult := (__Instance as IServiceValesCupones).FacturaCupon(Cliente, Importe, EstacionID, EmpleadoID, SerieFactura);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'FacturaCuponResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ActualizaCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ActualizaCupon(const Barras: AnsiString; const DiaConsumo: Integer; const EjercicioConsumo: Integer; const FechaConsumo: DateTime;
                             const PeriodoConsumo: Integer; const Secuencia: Integer; const Ticket: Integer; const Liquidacion: Integer); }
var
  Barras: AnsiString;
  DiaConsumo: Integer;
  EjercicioConsumo: Integer;
  FechaConsumo: DateTime;
  PeriodoConsumo: Integer;
  Secuencia: Integer;
  Ticket: Integer;
  Liquidacion: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Barras', TypeInfo(AnsiString), Barras, []);
    __Message.Read('DiaConsumo', TypeInfo(Integer), DiaConsumo, []);
    __Message.Read('EjercicioConsumo', TypeInfo(Integer), EjercicioConsumo, []);
    __Message.Read('FechaConsumo', TypeInfo(DateTime), FechaConsumo, [paIsDateTime]);
    __Message.Read('PeriodoConsumo', TypeInfo(Integer), PeriodoConsumo, []);
    __Message.Read('Secuencia', TypeInfo(Integer), Secuencia, []);
    __Message.Read('Ticket', TypeInfo(Integer), Ticket, []);
    __Message.Read('Liquidacion', TypeInfo(Integer), Liquidacion, []);

    (__Instance as IServiceValesCupones).ActualizaCupon(Barras, DiaConsumo, EjercicioConsumo, FechaConsumo, PeriodoConsumo, Secuencia, Ticket, Liquidacion);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ActualizaCuponResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ActualizaCuponConReferencia(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ActualizaCuponConReferencia(const Barras: AnsiString; const DiaConsumo: Integer; const EjercicioConsumo: Integer; const FechaConsumo: DateTime;
                                          const PeriodoConsumo: Integer; const Secuencia: Integer; const Ticket: Integer; const Referencia: AnsiString); }
var
  Barras: AnsiString;
  DiaConsumo: Integer;
  EjercicioConsumo: Integer;
  FechaConsumo: DateTime;
  PeriodoConsumo: Integer;
  Secuencia: Integer;
  Ticket: Integer;
  Referencia: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Barras', TypeInfo(AnsiString), Barras, []);
    __Message.Read('DiaConsumo', TypeInfo(Integer), DiaConsumo, []);
    __Message.Read('EjercicioConsumo', TypeInfo(Integer), EjercicioConsumo, []);
    __Message.Read('FechaConsumo', TypeInfo(DateTime), FechaConsumo, [paIsDateTime]);
    __Message.Read('PeriodoConsumo', TypeInfo(Integer), PeriodoConsumo, []);
    __Message.Read('Secuencia', TypeInfo(Integer), Secuencia, []);
    __Message.Read('Ticket', TypeInfo(Integer), Ticket, []);
    __Message.Read('Referencia', TypeInfo(AnsiString), Referencia, []);

    (__Instance as IServiceValesCupones).ActualizaCuponConReferencia(Barras, DiaConsumo, EjercicioConsumo, FechaConsumo, PeriodoConsumo, Secuencia, Ticket,
        Referencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ActualizaCuponConReferenciaResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ActualizaLiquidacionCorte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ActualizaLiquidacionCorte(const Liquidacion: Integer; const Secuencia: Integer; const AgrupacionID: Integer); }
var
  Liquidacion: Integer;
  Secuencia: Integer;
  AgrupacionID: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Liquidacion', TypeInfo(Integer), Liquidacion, []);
    __Message.Read('Secuencia', TypeInfo(Integer), Secuencia, []);
    __Message.Read('AgrupacionID', TypeInfo(Integer), AgrupacionID, []);

    (__Instance as IServiceValesCupones).ActualizaLiquidacionCorte(Liquidacion, Secuencia, AgrupacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ActualizaLiquidacionCorteResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ActualizarStatusValeCredito(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ActualizarStatusValeCredito(const CarteraValeCreditoID: Integer; const Status: AnsiString; const FacturaID: Integer); }
var
  CarteraValeCreditoID: Integer;
  Status: AnsiString;
  FacturaID: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('CarteraValeCreditoID', TypeInfo(Integer), CarteraValeCreditoID, []);
    __Message.Read('Status', TypeInfo(AnsiString), Status, []);
    __Message.Read('FacturaID', TypeInfo(Integer), FacturaID, []);

    (__Instance as IServiceValesCupones).ActualizarStatusValeCredito(CarteraValeCreditoID, Status, FacturaID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ActualizarStatusValeCreditoResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ActualizaStatusCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ActualizaStatusCupon(const Barras: AnsiString; const DiaConsumo: Integer; const EjercicioConsumo: Integer; const FechaConsumo: DateTime;
                                   const LiquidacionID: Integer; const PeriodoConsumo: Integer; const Secuencia: Integer); }
var
  Barras: AnsiString;
  DiaConsumo: Integer;
  EjercicioConsumo: Integer;
  FechaConsumo: DateTime;
  LiquidacionID: Integer;
  PeriodoConsumo: Integer;
  Secuencia: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Barras', TypeInfo(AnsiString), Barras, []);
    __Message.Read('DiaConsumo', TypeInfo(Integer), DiaConsumo, []);
    __Message.Read('EjercicioConsumo', TypeInfo(Integer), EjercicioConsumo, []);
    __Message.Read('FechaConsumo', TypeInfo(DateTime), FechaConsumo, [paIsDateTime]);
    __Message.Read('LiquidacionID', TypeInfo(Integer), LiquidacionID, []);
    __Message.Read('PeriodoConsumo', TypeInfo(Integer), PeriodoConsumo, []);
    __Message.Read('Secuencia', TypeInfo(Integer), Secuencia, []);

    (__Instance as IServiceValesCupones).ActualizaStatusCupon(Barras, DiaConsumo, EjercicioConsumo, FechaConsumo, LiquidacionID, PeriodoConsumo, Secuencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ActualizaStatusCuponResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_BuscaHost(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function BuscaHost(const Tipo: Integer; const Gasolinero: Integer): AnsiString; }
var
  Tipo: Integer;
  Gasolinero: Integer;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Tipo', TypeInfo(Integer), Tipo, []);
    __Message.Read('Gasolinero', TypeInfo(Integer), Gasolinero, []);

    lResult := (__Instance as IServiceValesCupones).BuscaHost(Tipo, Gasolinero);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'BuscaHostResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_BuscaReporte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function BuscaReporte(const Nombre: AnsiString; const TipoTemplate: Integer): TReporte; }
var
  Nombre: AnsiString;
  TipoTemplate: Integer;
  lResult: LibraryValesCupones_Intf.TReporte;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('Nombre', TypeInfo(AnsiString), Nombre, []);
    __Message.Read('TipoTemplate', TypeInfo(Integer), TipoTemplate, []);

    lResult := (__Instance as IServiceValesCupones).BuscaReporte(Nombre, TipoTemplate);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'BuscaReporteResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TReporte), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_CambiaFolioFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CambiaFolioFactura(const Serie: AnsiString; const Folio: Integer; const NewSerie: AnsiString; const NewFolio: Integer): AnsiString; }
var
  Serie: AnsiString;
  Folio: Integer;
  NewSerie: AnsiString;
  NewFolio: Integer;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);
    __Message.Read('NewSerie', TypeInfo(AnsiString), NewSerie, []);
    __Message.Read('NewFolio', TypeInfo(Integer), NewFolio, []);

    lResult := (__Instance as IServiceValesCupones).CambiaFolioFactura(Serie, Folio, NewSerie, NewFolio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'CambiaFolioFacturaResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_CancelaFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CancelaFactura(const Folio: Integer; const Serie: AnsiString; const Fecha: DateTime; const EstacionID: Integer; const UsuarioID: Integer): AnsiString; }
var
  Folio: Integer;
  Serie: AnsiString;
  Fecha: DateTime;
  EstacionID: Integer;
  UsuarioID: Integer;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('Fecha', TypeInfo(DateTime), Fecha, [paIsDateTime]);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);

    lResult := (__Instance as IServiceValesCupones).CancelaFactura(Folio, Serie, Fecha, EstacionID, UsuarioID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'CancelaFacturaResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_CancelarCupones(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CancelarCupones(const Lista: AnsiString; const UsuarioID: Integer): AnsiString; }
var
  Lista: AnsiString;
  UsuarioID: Integer;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Lista', TypeInfo(AnsiString), Lista, []);
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);

    lResult := (__Instance as IServiceValesCupones).CancelarCupones(Lista, UsuarioID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'CancelarCuponesResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_CierraLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CierraLiquidacion(const LiquidacionID: Integer): AnsiString; }
var
  LiquidacionID: Integer;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('LiquidacionID', TypeInfo(Integer), LiquidacionID, []);

    lResult := (__Instance as IServiceValesCupones).CierraLiquidacion(LiquidacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'CierraLiquidacionResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_CostoProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CostoProducto(const ProductoID: Integer): Double; }
var
  ProductoID: Integer;
  lResult: Double;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('ProductoID', TypeInfo(Integer), ProductoID, []);

    lResult := (__Instance as IServiceValesCupones).CostoProducto(ProductoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'CostoProductoResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_DatosCliente(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosCliente(const ClienteID: Integer; const Referencia: AnsiString): TDatosCliente; }
var
  ClienteID: Integer;
  Referencia: AnsiString;
  lResult: LibraryValesCupones_Intf.TDatosCliente;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('Referencia', TypeInfo(AnsiString), Referencia, []);

    lResult := (__Instance as IServiceValesCupones).DatosCliente(ClienteID, Referencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'DatosClienteResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TDatosCliente), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_Existencia(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Existencia(const EstacionID: Integer; const AlmacenID: Integer; const ProductoID: Integer; const Fecha: DateTime): Double; }
var
  EstacionID: Integer;
  AlmacenID: Integer;
  ProductoID: Integer;
  Fecha: DateTime;
  lResult: Double;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('AlmacenID', TypeInfo(Integer), AlmacenID, []);
    __Message.Read('ProductoID', TypeInfo(Integer), ProductoID, []);
    __Message.Read('Fecha', TypeInfo(DateTime), Fecha, [paIsDateTime]);

    lResult := (__Instance as IServiceValesCupones).Existencia(EstacionID, AlmacenID, ProductoID, Fecha);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ExistenciaResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_FacturaExpress(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function FacturaExpress(const Serie: AnsiString; const Folio: Integer): TFacturaExpress; }
var
  Serie: AnsiString;
  Folio: Integer;
  lResult: LibraryValesCupones_Intf.TFacturaExpress;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);

    lResult := (__Instance as IServiceValesCupones).FacturaExpress(Serie, Folio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'FacturaExpressResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TFacturaExpress), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_FacturaID(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function FacturaID(const Serie: AnsiString; const Folio: Integer): Integer; }
var
  Serie: AnsiString;
  Folio: Integer;
  lResult: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);

    lResult := (__Instance as IServiceValesCupones).FacturaID(Serie, Folio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'FacturaIDResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_FacturaYLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function FacturaYLiquidacion(const ClienteID: Integer): Boolean; }
var
  ClienteID: Integer;
  lResult: Boolean;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);

    lResult := (__Instance as IServiceValesCupones).FacturaYLiquidacion(ClienteID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'FacturaYLiquidacionResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_Fecha(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Fecha: DateTime; }
var
  lResult: DateTime;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    lResult := (__Instance as IServiceValesCupones).Fecha;

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'FechaResponse');
    __Message.Write('Result', TypeInfo(DateTime), lResult, [paIsDateTime]);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_Folio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Folio(const Campo: AnsiString; const Serie: AnsiString): Integer; }
var
  Campo: AnsiString;
  Serie: AnsiString;
  lResult: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Campo', TypeInfo(AnsiString), Campo, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);

    lResult := (__Instance as IServiceValesCupones).Folio(Campo, Serie);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'FolioResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_FolioActual(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function FolioActual(const Campo: AnsiString; const Serie: AnsiString): Integer; }
var
  Campo: AnsiString;
  Serie: AnsiString;
  lResult: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Campo', TypeInfo(AnsiString), Campo, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);

    lResult := (__Instance as IServiceValesCupones).FolioActual(Campo, Serie);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'FolioActualResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_FolioActual2(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function FolioActual2(const serie: AnsiString; const folio: Integer): Integer; }
var
  serie: AnsiString;
  folio: Integer;
  lResult: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('serie', TypeInfo(AnsiString), serie, []);
    __Message.Read('folio', TypeInfo(Integer), folio, []);

    lResult := (__Instance as IServiceValesCupones).FolioActual2(serie, folio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'FolioActual2Response');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_GuardaAccesos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GuardaAccesos(const UsuarioID: Integer; const Lista: AnsiString); }
var
  UsuarioID: Integer;
  Lista: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);
    __Message.Read('Lista', TypeInfo(AnsiString), Lista, []);

    (__Instance as IServiceValesCupones).GuardaAccesos(UsuarioID, Lista);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'GuardaAccesosResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_GuardaConsumoExpress(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GuardaConsumoExpress(const Consumo: TConsumoExpress): Boolean; }
var
  Consumo: LibraryValesCupones_Intf.TConsumoExpress;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  Consumo := nil;
  try
    __Message.Read('Consumo', TypeInfo(LibraryValesCupones_Intf.TConsumoExpress), Consumo, []);

    lResult := (__Instance as IServiceValesCupones).GuardaConsumoExpress(Consumo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'GuardaConsumoExpressResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_GuardaLimiteFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GuardaLimiteFactura(const UsuarioID: Int64; const Cantidad: Double); }
var
  UsuarioID: Int64;
  Cantidad: Double;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('UsuarioID', TypeInfo(Int64), UsuarioID, []);
    __Message.Read('Cantidad', TypeInfo(Double), Cantidad, []);

    (__Instance as IServiceValesCupones).GuardaLimiteFactura(UsuarioID, Cantidad);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'GuardaLimiteFacturaResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_GuardarDatosFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GuardarDatosFactura(const DatosFactura: TDatosFactura); }
var
  DatosFactura: LibraryValesCupones_Intf.TDatosFactura;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  DatosFactura := nil;
  try
    __Message.Read('DatosFactura', TypeInfo(LibraryValesCupones_Intf.TDatosFactura), DatosFactura, []);

    (__Instance as IServiceValesCupones).GuardarDatosFactura(DatosFactura);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'GuardarDatosFacturaResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(DatosFactura);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_GuardarDatosLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GuardarDatosLiquidacion(const DatosLiquidacion: TDatosLiquidacion); }
var
  DatosLiquidacion: LibraryValesCupones_Intf.TDatosLiquidacion;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  DatosLiquidacion := nil;
  try
    __Message.Read('DatosLiquidacion', TypeInfo(LibraryValesCupones_Intf.TDatosLiquidacion), DatosLiquidacion, []);

    (__Instance as IServiceValesCupones).GuardarDatosLiquidacion(DatosLiquidacion);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'GuardarDatosLiquidacionResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(DatosLiquidacion);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_GuardarDatosReciboPago(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GuardarDatosReciboPago(const DatosReciboPago: TDatosReciboPago); }
var
  DatosReciboPago: LibraryValesCupones_Intf.TDatosReciboPago;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  DatosReciboPago := nil;
  try
    __Message.Read('DatosReciboPago', TypeInfo(LibraryValesCupones_Intf.TDatosReciboPago), DatosReciboPago, []);

    (__Instance as IServiceValesCupones).GuardarDatosReciboPago(DatosReciboPago);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'GuardarDatosReciboPagoResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(DatosReciboPago);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_GuardarFacturaExpress(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GuardarFacturaExpress(const ClienteID: Integer; const Serie: AnsiString; const EstacionID: Integer; const TicketID: Integer): TFacturaExpress; }
var
  ClienteID: Integer;
  Serie: AnsiString;
  EstacionID: Integer;
  TicketID: Integer;
  lResult: LibraryValesCupones_Intf.TFacturaExpress;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('TicketID', TypeInfo(Integer), TicketID, []);

    lResult := (__Instance as IServiceValesCupones).GuardarFacturaExpress(ClienteID, Serie, EstacionID, TicketID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'GuardarFacturaExpressResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TFacturaExpress), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_InsertaDeposito(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure InsertaDeposito(const DepositoID: Integer; const Cantidad: Double; const Usuario: Integer; const Fecha: DateTime; const Secuencia: Integer;
                              const EstacionID: Integer; const Descripcion: AnsiString; const Ejercicio: Integer; const Periodo: Integer;
                              const Dia: Integer); }
var
  DepositoID: Integer;
  Cantidad: Double;
  Usuario: Integer;
  Fecha: DateTime;
  Secuencia: Integer;
  EstacionID: Integer;
  Descripcion: AnsiString;
  Ejercicio: Integer;
  Periodo: Integer;
  Dia: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('DepositoID', TypeInfo(Integer), DepositoID, []);
    __Message.Read('Cantidad', TypeInfo(Double), Cantidad, []);
    __Message.Read('Usuario', TypeInfo(Integer), Usuario, []);
    __Message.Read('Fecha', TypeInfo(DateTime), Fecha, [paIsDateTime]);
    __Message.Read('Secuencia', TypeInfo(Integer), Secuencia, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('Descripcion', TypeInfo(AnsiString), Descripcion, []);
    __Message.Read('Ejercicio', TypeInfo(Integer), Ejercicio, []);
    __Message.Read('Periodo', TypeInfo(Integer), Periodo, []);
    __Message.Read('Dia', TypeInfo(Integer), Dia, []);

    (__Instance as IServiceValesCupones).InsertaDeposito(DepositoID, Cantidad, Usuario, Fecha, Secuencia, EstacionID, Descripcion, Ejercicio, Periodo, Dia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'InsertaDepositoResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_GuardaDatosFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GuardaDatosFactura(const DatosFactura: TDatosFactura); }
var
  DatosFactura: LibraryValesCupones_Intf.TDatosFactura;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  DatosFactura := nil;
  try
    __Message.Read('DatosFactura', TypeInfo(LibraryValesCupones_Intf.TDatosFactura), DatosFactura, []);

    (__Instance as IServiceValesCupones).GuardaDatosFactura(DatosFactura);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'GuardaDatosFacturaResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(DatosFactura);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_InsertaProductoPrecio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure InsertaProductoPrecio(const ProductoID: Integer; const EstacionID: Integer; const Precio: Double); }
var
  ProductoID: Integer;
  EstacionID: Integer;
  Precio: Double;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('ProductoID', TypeInfo(Integer), ProductoID, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('Precio', TypeInfo(Double), Precio, []);

    (__Instance as IServiceValesCupones).InsertaProductoPrecio(ProductoID, EstacionID, Precio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'InsertaProductoPrecioResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_Login(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Login(const Usuario: AnsiString; const Clave: AnsiString): TLoginInfo; }
var
  Usuario: AnsiString;
  Clave: AnsiString;
  lResult: LibraryValesCupones_Intf.TLoginInfo;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('Usuario', TypeInfo(AnsiString), Usuario, []);
    __Message.Read('Clave', TypeInfo(AnsiString), Clave, []);

    lResult := (__Instance as IServiceValesCupones).Login(Usuario, Clave);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'LoginResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TLoginInfo), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ModificarFolioActual(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ModificarFolioActual(const Campo: AnsiString; const Serie: AnsiString; const Folio: Integer): AnsiString; }
var
  Campo: AnsiString;
  Serie: AnsiString;
  Folio: Integer;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Campo', TypeInfo(AnsiString), Campo, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);

    lResult := (__Instance as IServiceValesCupones).ModificarFolioActual(Campo, Serie, Folio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ModificarFolioActualResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ObtenerStatusCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ObtenerStatusCupon(const Barras: AnsiString): AnsiString; }
var
  Barras: AnsiString;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Barras', TypeInfo(AnsiString), Barras, []);

    lResult := (__Instance as IServiceValesCupones).ObtenerStatusCupon(Barras);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ObtenerStatusCuponResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_PrefijaCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function PrefijaCupon(const nBomba: Integer; const Barras: AnsiString; const Terminal: AnsiString; const Grupo: Integer; const ClienteID: Integer): TCupon; }
var
  nBomba: Integer;
  Barras: AnsiString;
  Terminal: AnsiString;
  Grupo: Integer;
  ClienteID: Integer;
  lResult: LibraryValesCupones_Intf.TCupon;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('nBomba', TypeInfo(Integer), nBomba, []);
    __Message.Read('Barras', TypeInfo(AnsiString), Barras, []);
    __Message.Read('Terminal', TypeInfo(AnsiString), Terminal, []);
    __Message.Read('Grupo', TypeInfo(Integer), Grupo, []);
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);

    lResult := (__Instance as IServiceValesCupones).PrefijaCupon(nBomba, Barras, Terminal, Grupo, ClienteID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'PrefijaCuponResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TCupon), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ObtenerTipoCambioIDPorEstacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ObtenerTipoCambioIDPorEstacion(const EstacionID: Integer): Integer; }
var
  EstacionID: Integer;
  lResult: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceValesCupones).ObtenerTipoCambioIDPorEstacion(EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ObtenerTipoCambioIDPorEstacionResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ObtenerTipoCambioPorEstacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ObtenerTipoCambioPorEstacion(const EstacionID: Integer): Double; }
var
  EstacionID: Integer;
  lResult: Double;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceValesCupones).ObtenerTipoCambioPorEstacion(EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ObtenerTipoCambioPorEstacionResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_PrecioProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function PrecioProducto(const EstacionID: Integer; const ProductoID: Integer): Double; }
var
  EstacionID: Integer;
  ProductoID: Integer;
  lResult: Double;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('ProductoID', TypeInfo(Integer), ProductoID, []);

    lResult := (__Instance as IServiceValesCupones).PrecioProducto(EstacionID, ProductoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'PrecioProductoResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_StatusTicket(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function StatusTicket(const EstacionID: Integer; const TicketID: Integer): Integer; }
var
  EstacionID: Integer;
  TicketID: Integer;
  lResult: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('TicketID', TypeInfo(Integer), TicketID, []);

    lResult := (__Instance as IServiceValesCupones).StatusTicket(EstacionID, TicketID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'StatusTicketResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_SumaAnticipo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function SumaAnticipo(const Estacion: Integer; const Secuencia: Integer): Double; }
var
  Estacion: Integer;
  Secuencia: Integer;
  lResult: Double;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Estacion', TypeInfo(Integer), Estacion, []);
    __Message.Read('Secuencia', TypeInfo(Integer), Secuencia, []);

    lResult := (__Instance as IServiceValesCupones).SumaAnticipo(Estacion, Secuencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'SumaAnticipoResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_SumaVentasCorte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function SumaVentasCorte(const Estacion: Integer; const Secuencia: Integer; const AgrupacionID: Integer): Double; }
var
  Estacion: Integer;
  Secuencia: Integer;
  AgrupacionID: Integer;
  lResult: Double;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Estacion', TypeInfo(Integer), Estacion, []);
    __Message.Read('Secuencia', TypeInfo(Integer), Secuencia, []);
    __Message.Read('AgrupacionID', TypeInfo(Integer), AgrupacionID, []);

    lResult := (__Instance as IServiceValesCupones).SumaVentasCorte(Estacion, Secuencia, AgrupacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'SumaVentasCorteResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ValoresTurno(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ValoresTurno(const EstacionID: Integer; const TurnoID: Integer): TValoresTurno; }
var
  EstacionID: Integer;
  TurnoID: Integer;
  lResult: LibraryValesCupones_Intf.TValoresTurno;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);

    lResult := (__Instance as IServiceValesCupones).ValoresTurno(EstacionID, TurnoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ValoresTurnoResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TValoresTurno), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_VersionServer(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function VersionServer: AnsiString; }
var
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    lResult := (__Instance as IServiceValesCupones).VersionServer;

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'VersionServerResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_LiquidacionCerrada(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function LiquidacionCerrada(const EstacionID: Integer; const TurnoID: Integer): Boolean; }
var
  EstacionID: Integer;
  TurnoID: Integer;
  lResult: Boolean;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);

    lResult := (__Instance as IServiceValesCupones).LiquidacionCerrada(EstacionID, TurnoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'LiquidacionCerradaResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ClienteValido(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ClienteValido(const ClienteID: Integer; const NewClienteID: Integer): Boolean; }
var
  ClienteID: Integer;
  NewClienteID: Integer;
  lResult: Boolean;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('NewClienteID', TypeInfo(Integer), NewClienteID, []);

    lResult := (__Instance as IServiceValesCupones).ClienteValido(ClienteID, NewClienteID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ClienteValidoResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_BuscaOtroProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function BuscaOtroProducto(const EstacionID: Integer; const Codigo: AnsiString): TOtroProducto; }
var
  EstacionID: Integer;
  Codigo: AnsiString;
  lResult: LibraryValesCupones_Intf.TOtroProducto;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('Codigo', TypeInfo(AnsiString), Codigo, []);

    lResult := (__Instance as IServiceValesCupones).BuscaOtroProducto(EstacionID, Codigo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'BuscaOtroProductoResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TOtroProducto), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_TurnoALiquidacionID(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function TurnoALiquidacionID(const TurnoID: Integer; const EstacionID: Integer): Integer; }
var
  TurnoID: Integer;
  EstacionID: Integer;
  lResult: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceValesCupones).TurnoALiquidacionID(TurnoID, EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'TurnoALiquidacionIDResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_BuscaSagarpa(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function BuscaSagarpa(const EstacionID: Integer): TSagarpa; }
var
  EstacionID: Integer;
  lResult: LibraryValesCupones_Intf.TSagarpa;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceValesCupones).BuscaSagarpa(EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'BuscaSagarpaResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TSagarpa), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_PuntosCalculaSaldo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function PuntosCalculaSaldo(const ClienteID: Integer): Double; }
var
  ClienteID: Integer;
  lResult: Double;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);

    lResult := (__Instance as IServiceValesCupones).PuntosCalculaSaldo(ClienteID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'PuntosCalculaSaldoResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_PuntosCalculaPuntos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function PuntosCalculaPuntos(const ClienteID: Integer; const ProductoID: Integer; const Volumen: Double): Double; }
var
  ClienteID: Integer;
  ProductoID: Integer;
  Volumen: Double;
  lResult: Double;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('ProductoID', TypeInfo(Integer), ProductoID, []);
    __Message.Read('Volumen', TypeInfo(Double), Volumen, []);

    lResult := (__Instance as IServiceValesCupones).PuntosCalculaPuntos(ClienteID, ProductoID, Volumen);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'PuntosCalculaPuntosResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_PuntosGuardaDatos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure PuntosGuardaDatos(const Datos: TDatosPuntos); }
var
  Datos: LibraryValesCupones_Intf.TDatosPuntos;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  Datos := nil;
  try
    __Message.Read('Datos', TypeInfo(LibraryValesCupones_Intf.TDatosPuntos), Datos, []);

    (__Instance as IServiceValesCupones).PuntosGuardaDatos(Datos);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'PuntosGuardaDatosResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Datos);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_PuntosDatos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function PuntosDatos(const ClienteID: Integer): TDatosPuntos; }
var
  ClienteID: Integer;
  lResult: LibraryValesCupones_Intf.TDatosPuntos;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);

    lResult := (__Instance as IServiceValesCupones).PuntosDatos(ClienteID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'PuntosDatosResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TDatosPuntos), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_EliminaAutomaticosLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function EliminaAutomaticosLiquidacion(const EstacionID: Integer; const TurnoID: Integer): Boolean; }
var
  EstacionID: Integer;
  TurnoID: Integer;
  lResult: Boolean;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);

    lResult := (__Instance as IServiceValesCupones).EliminaAutomaticosLiquidacion(EstacionID, TurnoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'EliminaAutomaticosLiquidacionResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_BuscaDespachadorLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function BuscaDespachadorLiquidacion(const BombaID: Integer; const EstacionID: Integer; const TurnoID: Integer): Integer; }
var
  BombaID: Integer;
  EstacionID: Integer;
  TurnoID: Integer;
  lResult: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('BombaID', TypeInfo(Integer), BombaID, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);

    lResult := (__Instance as IServiceValesCupones).BuscaDespachadorLiquidacion(BombaID, EstacionID, TurnoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'BuscaDespachadorLiquidacionResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_EntregaPremio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function EntregaPremio(const ClienteID: Integer; const PremioID: Integer; const Cantidad: Integer): TEntregaPremio; }
var
  ClienteID: Integer;
  PremioID: Integer;
  Cantidad: Integer;
  lResult: LibraryValesCupones_Intf.TEntregaPremio;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('PremioID', TypeInfo(Integer), PremioID, []);
    __Message.Read('Cantidad', TypeInfo(Integer), Cantidad, []);

    lResult := (__Instance as IServiceValesCupones).EntregaPremio(ClienteID, PremioID, Cantidad);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'EntregaPremioResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TEntregaPremio), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_DatosPremio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosPremio(const PremioID: Integer): TDatosPremio; }
var
  PremioID: Integer;
  lResult: LibraryValesCupones_Intf.TDatosPremio;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('PremioID', TypeInfo(Integer), PremioID, []);

    lResult := (__Instance as IServiceValesCupones).DatosPremio(PremioID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'DatosPremioResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TDatosPremio), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ValidaConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ValidaConsumo(const Consumo: TConsumoExpress): Integer; }
var
  Consumo: LibraryValesCupones_Intf.TConsumoExpress;
  lResult: Integer;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  Consumo := nil;
  try
    __Message.Read('Consumo', TypeInfo(LibraryValesCupones_Intf.TConsumoExpress), Consumo, []);

    lResult := (__Instance as IServiceValesCupones).ValidaConsumo(Consumo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ValidaConsumoResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_AgrupacionesBomba(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function AgrupacionesBomba(const EstacionID: Integer): AAgrupacion; }
var
  EstacionID: Integer;
  lResult: LibraryValesCupones_Intf.AAgrupacion;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceValesCupones).AgrupacionesBomba(EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'AgrupacionesBombaResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.AAgrupacion), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_DatosCerrarLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosCerrarLiquidacion(const EstacionID: Integer; const TurnoID: Integer): TDatosCerrarLiquidacion; }
var
  EstacionID: Integer;
  TurnoID: Integer;
  lResult: LibraryValesCupones_Intf.TDatosCerrarLiquidacion;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);

    lResult := (__Instance as IServiceValesCupones).DatosCerrarLiquidacion(EstacionID, TurnoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'DatosCerrarLiquidacionResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TDatosCerrarLiquidacion), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ProcesaVentasLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ProcesaVentasLiquidacion(const Datos: TDatosCerrarLiquidacion); }
var
  Datos: LibraryValesCupones_Intf.TDatosCerrarLiquidacion;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  Datos := nil;
  try
    __Message.Read('Datos', TypeInfo(LibraryValesCupones_Intf.TDatosCerrarLiquidacion), Datos, []);

    (__Instance as IServiceValesCupones).ProcesaVentasLiquidacion(Datos);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ProcesaVentasLiquidacionResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Datos);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_TicketsLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function TicketsLiquidacion(const LiquidacionID: Integer): AnsiString; }
var
  LiquidacionID: Integer;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('LiquidacionID', TypeInfo(Integer), LiquidacionID, []);

    lResult := (__Instance as IServiceValesCupones).TicketsLiquidacion(LiquidacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'TicketsLiquidacionResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ValidaFolioFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ValidaFolioFactura(const Serie: AnsiString; const Folio: Integer): Boolean; }
var
  Serie: AnsiString;
  Folio: Integer;
  lResult: Boolean;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);

    lResult := (__Instance as IServiceValesCupones).ValidaFolioFactura(Serie, Folio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ValidaFolioFacturaResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_PuntosGuardaCriterios(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure PuntosGuardaCriterios(const PuntosCriterioID: Integer; const Datos: AnsiString); }
var
  PuntosCriterioID: Integer;
  Datos: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('PuntosCriterioID', TypeInfo(Integer), PuntosCriterioID, []);
    __Message.Read('Datos', TypeInfo(AnsiString), Datos, []);

    (__Instance as IServiceValesCupones).PuntosGuardaCriterios(PuntosCriterioID, Datos);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'PuntosGuardaCriteriosResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_DatosFacturaElectronica(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosFacturaElectronica(const FacturaID: Integer; const EstacionID: Integer): TFacturaElectronica; }
var
  FacturaID: Integer;
  EstacionID: Integer;
  lResult: LibraryValesCupones_Intf.TFacturaElectronica;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('FacturaID', TypeInfo(Integer), FacturaID, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceValesCupones).DatosFacturaElectronica(FacturaID, EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'DatosFacturaElectronicaResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TFacturaElectronica), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_LlavePrivaCertificado(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function LlavePrivaCertificado(const LlavePrivada: AnsiString; const Certificado: AnsiString; const GasolineroID: Integer; const Password: AnsiString;
                                   const EstacionID: Integer): AnsiString; }
var
  LlavePrivada: AnsiString;
  Certificado: AnsiString;
  GasolineroID: Integer;
  Password: AnsiString;
  EstacionID: Integer;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('LlavePrivada', TypeInfo(AnsiString), LlavePrivada, []);
    __Message.Read('Certificado', TypeInfo(AnsiString), Certificado, []);
    __Message.Read('GasolineroID', TypeInfo(Integer), GasolineroID, []);
    __Message.Read('Password', TypeInfo(AnsiString), Password, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceValesCupones).LlavePrivaCertificado(LlavePrivada, Certificado, GasolineroID, Password, EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'LlavePrivaCertificadoResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_SELLOPEMs(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function SELLOPEMs(const Texto: UnicodeString; const EstacionID: Integer): AnsiString; }
var
  Texto: UnicodeString;
  EstacionID: Integer;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Texto', TypeInfo(UnicodeString), Texto, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceValesCupones).SELLOPEMs(Texto, EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'SELLOPEMsResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_CERs(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CERs(const DIR: AnsiString): AnsiString; }
var
  DIR: AnsiString;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('DIR', TypeInfo(AnsiString), DIR, []);

    lResult := (__Instance as IServiceValesCupones).CERs(DIR);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'CERsResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ValidaLiquidacionDespachador(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ValidaLiquidacionDespachador(const LiquidacionID: Integer): AnsiString; }
var
  LiquidacionID: Integer;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('LiquidacionID', TypeInfo(Integer), LiquidacionID, []);

    lResult := (__Instance as IServiceValesCupones).ValidaLiquidacionDespachador(LiquidacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ValidaLiquidacionDespachadorResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ActualizaLiquidacionProd(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ActualizaLiquidacionProd(const Estacion: Integer; const FechaIni: DateTime; const FechaFin: DateTime; const TurnoID: Integer): Boolean; }
var
  Estacion: Integer;
  FechaIni: DateTime;
  FechaFin: DateTime;
  TurnoID: Integer;
  lResult: Boolean;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Estacion', TypeInfo(Integer), Estacion, []);
    __Message.Read('FechaIni', TypeInfo(DateTime), FechaIni, [paIsDateTime]);
    __Message.Read('FechaFin', TypeInfo(DateTime), FechaFin, [paIsDateTime]);
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);

    lResult := (__Instance as IServiceValesCupones).ActualizaLiquidacionProd(Estacion, FechaIni, FechaFin, TurnoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ActualizaLiquidacionProdResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_PuntosDespachador(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure PuntosDespachador(const TurnoID: Integer; const EstacionID: Integer; const UsuarioID: Integer); }
var
  TurnoID: Integer;
  EstacionID: Integer;
  UsuarioID: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);

    (__Instance as IServiceValesCupones).PuntosDespachador(TurnoID, EstacionID, UsuarioID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'PuntosDespachadorResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_GuardarDatosFacturaPemex(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GuardarDatosFacturaPemex(const DatosFacturaPemex: TDatosFacturaPemex); }
var
  DatosFacturaPemex: LibraryValesCupones_Intf.TDatosFacturaPemex;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  DatosFacturaPemex := nil;
  try
    __Message.Read('DatosFacturaPemex', TypeInfo(LibraryValesCupones_Intf.TDatosFacturaPemex), DatosFacturaPemex, []);

    (__Instance as IServiceValesCupones).GuardarDatosFacturaPemex(DatosFacturaPemex);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'GuardarDatosFacturaPemexResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(DatosFacturaPemex);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_AfectaInventarios(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function AfectaInventarios(const LiquidacionID: Integer; const UsuarioID: Integer): AnsiString; }
var
  LiquidacionID: Integer;
  UsuarioID: Integer;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('LiquidacionID', TypeInfo(Integer), LiquidacionID, []);
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);

    lResult := (__Instance as IServiceValesCupones).AfectaInventarios(LiquidacionID, UsuarioID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'AfectaInventariosResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_InsertaFacturaElectronica(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure InsertaFacturaElectronica(const FacturaElectronicaID: Integer; const CadenaOriginal: UnicodeString; const SelloDigital: UnicodeString;
                                        const FacturaID: Integer; const Vigencia: Boolean; const Enviado: Boolean; const NoCertificado: AnsiString;
                                        const NoAprobacion: AnsiString; const FechaAprobacion: DateTime); }
var
  FacturaElectronicaID: Integer;
  CadenaOriginal: UnicodeString;
  SelloDigital: UnicodeString;
  FacturaID: Integer;
  Vigencia: Boolean;
  Enviado: Boolean;
  NoCertificado: AnsiString;
  NoAprobacion: AnsiString;
  FechaAprobacion: DateTime;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('FacturaElectronicaID', TypeInfo(Integer), FacturaElectronicaID, []);
    __Message.Read('CadenaOriginal', TypeInfo(UnicodeString), CadenaOriginal, []);
    __Message.Read('SelloDigital', TypeInfo(UnicodeString), SelloDigital, []);
    __Message.Read('FacturaID', TypeInfo(Integer), FacturaID, []);
    __Message.Read('Vigencia', TypeInfo(Boolean), Vigencia, []);
    __Message.Read('Enviado', TypeInfo(Boolean), Enviado, []);
    __Message.Read('NoCertificado', TypeInfo(AnsiString), NoCertificado, []);
    __Message.Read('NoAprobacion', TypeInfo(AnsiString), NoAprobacion, []);
    __Message.Read('FechaAprobacion', TypeInfo(DateTime), FechaAprobacion, [paIsDateTime]);

    (__Instance as IServiceValesCupones).InsertaFacturaElectronica(FacturaElectronicaID, CadenaOriginal, SelloDigital, FacturaID, Vigencia, Enviado, NoCertificado,
        NoAprobacion, FechaAprobacion);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'InsertaFacturaElectronicaResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_CERsNUM(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CERsNUM(const DIR: AnsiString): AnsiString; }
var
  DIR: AnsiString;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('DIR', TypeInfo(AnsiString), DIR, []);

    lResult := (__Instance as IServiceValesCupones).CERsNUM(DIR);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'CERsNUMResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ActualizaFirmaDefault(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ActualizaFirmaDefault(const UsuarioID: Integer; const FIRMA: Binary): AnsiString; }
var
  UsuarioID: Integer;
  FIRMA: Binary;
  lResult: AnsiString;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  FIRMA := nil;
  try
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);
    __Message.Read('FIRMA', TypeInfo(Binary), FIRMA, []);

    lResult := (__Instance as IServiceValesCupones).ActualizaFirmaDefault(UsuarioID, FIRMA);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ActualizaFirmaDefaultResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(FIRMA);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_obtendatosempleados(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function obtendatosempleados(const EstacionID: AnsiString; const Turno: AnsiString): AnsiString; }
var
  EstacionID: AnsiString;
  Turno: AnsiString;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('EstacionID', TypeInfo(AnsiString), EstacionID, []);
    __Message.Read('Turno', TypeInfo(AnsiString), Turno, []);

    lResult := (__Instance as IServiceValesCupones).obtendatosempleados(EstacionID, Turno);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'obtendatosempleadosResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ProgramaMantenimiento(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ProgramaMantenimiento(const IDPROGRAMAMANTENIMIENTO: Integer; const IDESTACION: Integer; const FECHA: DateTime); }
var
  IDPROGRAMAMANTENIMIENTO: Integer;
  IDESTACION: Integer;
  FECHA: DateTime;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('IDPROGRAMAMANTENIMIENTO', TypeInfo(Integer), IDPROGRAMAMANTENIMIENTO, []);
    __Message.Read('IDESTACION', TypeInfo(Integer), IDESTACION, []);
    __Message.Read('FECHA', TypeInfo(DateTime), FECHA, [paIsDateTime]);

    (__Instance as IServiceValesCupones).ProgramaMantenimiento(IDPROGRAMAMANTENIMIENTO, IDESTACION, FECHA);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ProgramaMantenimientoResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_obtendatosActividadesProgramadas(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function obtendatosActividadesProgramadas(const IDESTACION: Integer; const TIPO: Integer): AnsiString; }
var
  IDESTACION: Integer;
  TIPO: Integer;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('IDESTACION', TypeInfo(Integer), IDESTACION, []);
    __Message.Read('TIPO', TypeInfo(Integer), TIPO, []);

    lResult := (__Instance as IServiceValesCupones).obtendatosActividadesProgramadas(IDESTACION, TIPO);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'obtendatosActividadesProgramadasResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_obtenNotificacionesDiarias(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function obtenNotificacionesDiarias(const IDESTACION: Integer): AnsiString; }
var
  IDESTACION: Integer;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('IDESTACION', TypeInfo(Integer), IDESTACION, []);

    lResult := (__Instance as IServiceValesCupones).obtenNotificacionesDiarias(IDESTACION);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'obtenNotificacionesDiariasResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_registraactividadrealizada(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function registraactividadrealizada(const IDACTIVIDADMANTENIMIENTO: Integer; const NOTA: AnsiString; const STATUS: AnsiString): AnsiString; }
var
  IDACTIVIDADMANTENIMIENTO: Integer;
  NOTA: AnsiString;
  STATUS: AnsiString;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('IDACTIVIDADMANTENIMIENTO', TypeInfo(Integer), IDACTIVIDADMANTENIMIENTO, []);
    __Message.Read('NOTA', TypeInfo(AnsiString), NOTA, []);
    __Message.Read('STATUS', TypeInfo(AnsiString), STATUS, []);

    lResult := (__Instance as IServiceValesCupones).registraactividadrealizada(IDACTIVIDADMANTENIMIENTO, NOTA, STATUS);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'registraactividadrealizadaResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_CancelarLote(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CancelarLote(const LoteID: Integer; const UsuarioID: Integer): AnsiString; }
var
  LoteID: Integer;
  UsuarioID: Integer;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('LoteID', TypeInfo(Integer), LoteID, []);
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);

    lResult := (__Instance as IServiceValesCupones).CancelarLote(LoteID, UsuarioID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'CancelarLoteResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_StatusCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function StatusCupon(const Codigo: AnsiString): AnsiString; }
var
  Codigo: AnsiString;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Codigo', TypeInfo(AnsiString), Codigo, []);

    lResult := (__Instance as IServiceValesCupones).StatusCupon(Codigo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'StatusCuponResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_BuscarReporte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function BuscarReporte(const Nombre: AnsiString): TReporte; }
var
  Nombre: AnsiString;
  lResult: LibraryValesCupones_Intf.TReporte;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('Nombre', TypeInfo(AnsiString), Nombre, []);

    lResult := (__Instance as IServiceValesCupones).BuscarReporte(Nombre);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'BuscarReporteResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TReporte), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_GeneraCupones(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GeneraCupones(const LoteCuponID: Integer; const ClienteID: Integer; const EstacionID: Integer; const Identificador: Integer;
                            const Cupones: AGeneraCupon; const TipoCupon: Boolean; const Serie: AnsiString; const aFolio: Integer); }
var
  LoteCuponID: Integer;
  ClienteID: Integer;
  EstacionID: Integer;
  Identificador: Integer;
  Cupones: LibraryValesCupones_Intf.AGeneraCupon;
  TipoCupon: Boolean;
  Serie: AnsiString;
  aFolio: Integer;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  Cupones := nil;
  try
    __Message.Read('LoteCuponID', TypeInfo(Integer), LoteCuponID, []);
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('Identificador', TypeInfo(Integer), Identificador, []);
    __Message.Read('Cupones', TypeInfo(LibraryValesCupones_Intf.AGeneraCupon), Cupones, []);
    __Message.Read('TipoCupon', TypeInfo(Boolean), TipoCupon, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('aFolio', TypeInfo(Integer), aFolio, []);

    (__Instance as IServiceValesCupones).GeneraCupones(LoteCuponID, ClienteID, EstacionID, Identificador, Cupones, TipoCupon, Serie, aFolio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'GeneraCuponesResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Cupones);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_DocumentosConSaldo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DocumentosConSaldo(const ClienteID: Integer): TDocumentosConSaldoArray; }
var
  ClienteID: Integer;
  lResult: LibraryValesCupones_Intf.TDocumentosConSaldoArray;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);

    lResult := (__Instance as IServiceValesCupones).DocumentosConSaldo(ClienteID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'DocumentosConSaldoResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TDocumentosConSaldoArray), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_FacturaRecibo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function FacturaRecibo(const Cliente: Integer; const Importe: Double; const EstacionID: Integer; const EmpleadoID: Integer;
                           const SerieFactura: AnsiString; const ProductoID: Integer): Integer; }
var
  Cliente: Integer;
  Importe: Double;
  EstacionID: Integer;
  EmpleadoID: Integer;
  SerieFactura: AnsiString;
  ProductoID: Integer;
  lResult: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Cliente', TypeInfo(Integer), Cliente, []);
    __Message.Read('Importe', TypeInfo(Double), Importe, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('EmpleadoID', TypeInfo(Integer), EmpleadoID, []);
    __Message.Read('SerieFactura', TypeInfo(AnsiString), SerieFactura, []);
    __Message.Read('ProductoID', TypeInfo(Integer), ProductoID, []);

    lResult := (__Instance as IServiceValesCupones).FacturaRecibo(Cliente, Importe, EstacionID, EmpleadoID, SerieFactura, ProductoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'FacturaReciboResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_CaracteresCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CaracteresCupon: AnsiString; }
var
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    lResult := (__Instance as IServiceValesCupones).CaracteresCupon;

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'CaracteresCuponResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ObtenCuponValido(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ObtenCuponValido(const Barras: AnsiString; const Grupo: Integer; const CuponAutoriza: TAutoriza): TCuponValido; }
var
  Barras: AnsiString;
  Grupo: Integer;
  CuponAutoriza: LibraryValesCupones_Intf.TAutoriza;
  lResult: LibraryValesCupones_Intf.TCuponValido;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  CuponAutoriza := nil;
  lResult := nil;
  try
    __Message.Read('Barras', TypeInfo(AnsiString), Barras, []);
    __Message.Read('Grupo', TypeInfo(Integer), Grupo, []);
    __Message.Read('CuponAutoriza', TypeInfo(LibraryValesCupones_Intf.TAutoriza), CuponAutoriza, []);

    lResult := (__Instance as IServiceValesCupones).ObtenCuponValido(Barras, Grupo, CuponAutoriza);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ObtenCuponValidoResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TCuponValido), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(CuponAutoriza);
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_GuardaAutorizacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GuardaAutorizacion(const Autorizacion: TAutoriza): Boolean; }
var
  Autorizacion: LibraryValesCupones_Intf.TAutoriza;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  Autorizacion := nil;
  try
    __Message.Read('Autorizacion', TypeInfo(LibraryValesCupones_Intf.TAutoriza), Autorizacion, []);

    lResult := (__Instance as IServiceValesCupones).GuardaAutorizacion(Autorizacion);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'GuardaAutorizacionResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Autorizacion);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_DatosVehiculo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosVehiculo(const VehiculoID: Integer): TDatosVehiculo; }
var
  VehiculoID: Integer;
  lResult: LibraryValesCupones_Intf.TDatosVehiculo;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('VehiculoID', TypeInfo(Integer), VehiculoID, []);

    lResult := (__Instance as IServiceValesCupones).DatosVehiculo(VehiculoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'DatosVehiculoResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TDatosVehiculo), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_CancelaGrupo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CancelaGrupo(const Grupo: Integer): Boolean; }
var
  Grupo: Integer;
  lResult: Boolean;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Grupo', TypeInfo(Integer), Grupo, []);

    lResult := (__Instance as IServiceValesCupones).CancelaGrupo(Grupo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'CancelaGrupoResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_QuemarCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function QuemarCupon(const Consumo: TConsumo; const Barras: AnsiString): Boolean; }
var
  Consumo: LibraryValesCupones_Intf.TConsumo;
  Barras: AnsiString;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  Consumo := nil;
  try
    __Message.Read('Consumo', TypeInfo(LibraryValesCupones_Intf.TConsumo), Consumo, []);
    __Message.Read('Barras', TypeInfo(AnsiString), Barras, []);

    lResult := (__Instance as IServiceValesCupones).QuemarCupon(Consumo, Barras);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'QuemarCuponResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_GuardarConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GuardarConsumo(const Consumo: TConsumo): Boolean; }
var
  Consumo: LibraryValesCupones_Intf.TConsumo;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  Consumo := nil;
  try
    __Message.Read('Consumo', TypeInfo(LibraryValesCupones_Intf.TConsumo), Consumo, []);

    lResult := (__Instance as IServiceValesCupones).GuardarConsumo(Consumo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'GuardarConsumoResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_DatosVerifica(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosVerifica(const VehiculoID: Integer): TDatosVerifica; }
var
  VehiculoID: Integer;
  lResult: LibraryValesCupones_Intf.TDatosVerifica;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('VehiculoID', TypeInfo(Integer), VehiculoID, []);

    lResult := (__Instance as IServiceValesCupones).DatosVerifica(VehiculoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'DatosVerificaResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TDatosVerifica), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_DatosVerificaReferencia(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosVerificaReferencia(const Referencia: AnsiString): TDatosVerifica; }
var
  Referencia: AnsiString;
  lResult: LibraryValesCupones_Intf.TDatosVerifica;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    __Message.Read('Referencia', TypeInfo(AnsiString), Referencia, []);

    lResult := (__Instance as IServiceValesCupones).DatosVerificaReferencia(Referencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'DatosVerificaReferenciaResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TDatosVerifica), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_TarjetaConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function TarjetaConsumo(const Tarjeta: AnsiString; const Consumo: TConsumo): Boolean; }
var
  Tarjeta: AnsiString;
  Consumo: LibraryValesCupones_Intf.TConsumo;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  Consumo := nil;
  try
    __Message.Read('Tarjeta', TypeInfo(AnsiString), Tarjeta, []);
    __Message.Read('Consumo', TypeInfo(LibraryValesCupones_Intf.TConsumo), Consumo, []);

    lResult := (__Instance as IServiceValesCupones).TarjetaConsumo(Tarjeta, Consumo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'TarjetaConsumoResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ActualizaHistorial(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ActualizaHistorial(const Consumo: TConsumo); }
var
  Consumo: LibraryValesCupones_Intf.TConsumo;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  Consumo := nil;
  try
    __Message.Read('Consumo', TypeInfo(LibraryValesCupones_Intf.TConsumo), Consumo, []);

    (__Instance as IServiceValesCupones).ActualizaHistorial(Consumo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ActualizaHistorialResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_EliminaAutorizacionVehiculo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function EliminaAutorizacionVehiculo(const Referencia: AnsiString): Boolean; }
var
  Referencia: AnsiString;
  lResult: Boolean;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Referencia', TypeInfo(AnsiString), Referencia, []);

    lResult := (__Instance as IServiceValesCupones).EliminaAutorizacionVehiculo(Referencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'EliminaAutorizacionVehiculoResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_AgregaSecuencias(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function AgregaSecuencias(const Consumos: aConsumo): Boolean; }
var
  Consumos: LibraryValesCupones_Intf.aConsumo;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  Consumos := nil;
  try
    __Message.Read('Consumos', TypeInfo(LibraryValesCupones_Intf.aConsumo), Consumos, []);

    lResult := (__Instance as IServiceValesCupones).AgregaSecuencias(Consumos);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'AgregaSecuenciasResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumos);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_AutorizaTarjeta(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function AutorizaTarjeta(const Autoriza: TAutoriza): TTarjeta; }
var
  Autoriza: LibraryValesCupones_Intf.TAutoriza;
  lResult: LibraryValesCupones_Intf.TTarjeta;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  Autoriza := nil;
  lResult := nil;
  try
    __Message.Read('Autoriza', TypeInfo(LibraryValesCupones_Intf.TAutoriza), Autoriza, []);

    lResult := (__Instance as IServiceValesCupones).AutorizaTarjeta(Autoriza);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'AutorizaTarjetaResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TTarjeta), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Autoriza);
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_BuscaAutorizacionTarjeta(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function BuscaAutorizacionTarjeta(const ClienteID: Integer; const VehiculoID: Integer; const GasolineroID: Integer): Boolean; }
var
  ClienteID: Integer;
  VehiculoID: Integer;
  GasolineroID: Integer;
  lResult: Boolean;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('VehiculoID', TypeInfo(Integer), VehiculoID, []);
    __Message.Read('GasolineroID', TypeInfo(Integer), GasolineroID, []);

    lResult := (__Instance as IServiceValesCupones).BuscaAutorizacionTarjeta(ClienteID, VehiculoID, GasolineroID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'BuscaAutorizacionTarjetaResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_EstadoDispensario(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure EstadoDispensario(const Dispensario: Integer; const Estado: AnsiString); }
var
  Dispensario: Integer;
  Estado: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Dispensario', TypeInfo(Integer), Dispensario, []);
    __Message.Read('Estado', TypeInfo(AnsiString), Estado, []);

    (__Instance as IServiceValesCupones).EstadoDispensario(Dispensario, Estado);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'EstadoDispensarioResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_EntradaBitacora(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure EntradaBitacora(const Descripcion: AnsiString; const Tipo: eTipoBitacora; const Alerta: Boolean); }
var
  Descripcion: AnsiString;
  Tipo: LibraryValesCupones_Intf.eTipoBitacora;
  Alerta: Boolean;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Descripcion', TypeInfo(AnsiString), Descripcion, []);
    __Message.Read('Tipo', TypeInfo(LibraryValesCupones_Intf.eTipoBitacora), Tipo, []);
    __Message.Read('Alerta', TypeInfo(Boolean), Alerta, []);

    (__Instance as IServiceValesCupones).EntradaBitacora(Descripcion, Tipo, Alerta);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'EntradaBitacoraResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_AutoCambioPrecio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure AutoCambioPrecio; }
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    (__Instance as IServiceValesCupones).AutoCambioPrecio;

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'AutoCambioPrecioResponse');
    __Message.Finalize;

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_CierraTurno(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure CierraTurno(const BombaID: Integer; const TurnoID: Integer; const FinLecturas: aLecturas); }
var
  BombaID: Integer;
  TurnoID: Integer;
  FinLecturas: LibraryValesCupones_Intf.aLecturas;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  FinLecturas := nil;
  try
    __Message.Read('BombaID', TypeInfo(Integer), BombaID, []);
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);
    __Message.Read('FinLecturas', TypeInfo(LibraryValesCupones_Intf.aLecturas), FinLecturas, []);

    (__Instance as IServiceValesCupones).CierraTurno(BombaID, TurnoID, FinLecturas);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'CierraTurnoResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(FinLecturas);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_CreaTurno(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure CreaTurno(const BombaID: Integer; const TurnoID: Integer; const InicioLecturas: aLecturas); }
var
  BombaID: Integer;
  TurnoID: Integer;
  InicioLecturas: LibraryValesCupones_Intf.aLecturas;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  InicioLecturas := nil;
  try
    __Message.Read('BombaID', TypeInfo(Integer), BombaID, []);
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);
    __Message.Read('InicioLecturas', TypeInfo(LibraryValesCupones_Intf.aLecturas), InicioLecturas, []);

    (__Instance as IServiceValesCupones).CreaTurno(BombaID, TurnoID, InicioLecturas);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'CreaTurnoResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(InicioLecturas);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_GuardaVenta(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GuardaVenta(const nBomba: Integer): Integer; }
var
  nBomba: Integer;
  lResult: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('nBomba', TypeInfo(Integer), nBomba, []);

    lResult := (__Instance as IServiceValesCupones).GuardaVenta(nBomba);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'GuardaVentaResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_UltimoTurnoBomba(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function UltimoTurnoBomba: aTurnoBomba; }
var
  lResult: LibraryValesCupones_Intf.aTurnoBomba;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    lResult := (__Instance as IServiceValesCupones).UltimoTurnoBomba;

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'UltimoTurnoBombaResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.aTurnoBomba), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ValidaSecuencias(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ValidaSecuencias(const TurnoID: Integer); }
var
  TurnoID: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);

    (__Instance as IServiceValesCupones).ValidaSecuencias(TurnoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ValidaSecuenciasResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_ValidaSecuenciasC(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ValidaSecuenciasC(const EstacionID: Integer; const Secuencias: AnsiString): AnsiString; }
var
  EstacionID: Integer;
  Secuencias: AnsiString;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('Secuencias', TypeInfo(AnsiString), Secuencias, []);

    lResult := (__Instance as IServiceValesCupones).ValidaSecuenciasC(EstacionID, Secuencias);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'ValidaSecuenciasCResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_Datos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Datos: TGlobal; }
var
  lResult: LibraryValesCupones_Intf.TGlobal;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  lResult := nil;
  try
    lResult := (__Instance as IServiceValesCupones).Datos;

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'DatosResponse');
    __Message.Write('Result', TypeInfo(LibraryValesCupones_Intf.TGlobal), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_CancelaGrupoC(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure CancelaGrupoC(const BombaID: Integer; const Grupo: Integer); }
var
  BombaID: Integer;
  Grupo: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('BombaID', TypeInfo(Integer), BombaID, []);
    __Message.Read('Grupo', TypeInfo(Integer), Grupo, []);

    (__Instance as IServiceValesCupones).CancelaGrupoC(BombaID, Grupo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'CancelaGrupoCResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_PrefijaGrupo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function PrefijaGrupo(const Bomba: Integer; const Grupo: Integer; const Terminal: AnsiString; const Cupon: TCupon): AnsiString; }
var
  Bomba: Integer;
  Grupo: Integer;
  Terminal: AnsiString;
  Cupon: LibraryValesCupones_Intf.TCupon;
  lResult: AnsiString;
  __lObjectDisposer: TROObjectDisposer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  Cupon := nil;
  try
    __Message.Read('Bomba', TypeInfo(Integer), Bomba, []);
    __Message.Read('Grupo', TypeInfo(Integer), Grupo, []);
    __Message.Read('Terminal', TypeInfo(AnsiString), Terminal, []);
    __Message.Read('Cupon', TypeInfo(LibraryValesCupones_Intf.TCupon), Cupon, []);

    lResult := (__Instance as IServiceValesCupones).PrefijaGrupo(Bomba, Grupo, Terminal, Cupon);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'PrefijaGrupoResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Cupon);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_PrefijaTarjeta(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function PrefijaTarjeta(const nBomba: Integer; const Tarjeta: AnsiString; const NIP: AnsiString; const Odometro: AnsiString;
                            const Terminal: AnsiString): AnsiString; }
var
  nBomba: Integer;
  Tarjeta: AnsiString;
  NIP: AnsiString;
  Odometro: AnsiString;
  Terminal: AnsiString;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('nBomba', TypeInfo(Integer), nBomba, []);
    __Message.Read('Tarjeta', TypeInfo(AnsiString), Tarjeta, []);
    __Message.Read('NIP', TypeInfo(AnsiString), NIP, []);
    __Message.Read('Odometro', TypeInfo(AnsiString), Odometro, []);
    __Message.Read('Terminal', TypeInfo(AnsiString), Terminal, []);

    lResult := (__Instance as IServiceValesCupones).PrefijaTarjeta(nBomba, Tarjeta, NIP, Odometro, Terminal);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'PrefijaTarjetaResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_AsignaBombas(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure AsignaBombas; }
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    (__Instance as IServiceValesCupones).AsignaBombas;

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'AsignaBombasResponse');
    __Message.Finalize;

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_AsignaProductos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure AsignaProductos; }
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    (__Instance as IServiceValesCupones).AsignaProductos;

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'AsignaProductosResponse');
    __Message.Finalize;

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_AsignaDispositivo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure AsignaDispositivo; }
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    (__Instance as IServiceValesCupones).AsignaDispositivo;

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'AsignaDispositivoResponse');
    __Message.Finalize;

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_AsignaTanques(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure AsignaTanques; }
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    (__Instance as IServiceValesCupones).AsignaTanques;

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'AsignaTanquesResponse');
    __Message.Finalize;

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_IncrementarImpreso(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure IncrementarImpreso(const Secuencia: Integer); }
var
  Secuencia: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Secuencia', TypeInfo(Integer), Secuencia, []);

    (__Instance as IServiceValesCupones).IncrementarImpreso(Secuencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'IncrementarImpresoResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_PrefijaTarjetaFrecuente(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function PrefijaTarjetaFrecuente(const nBomba: Integer; const Tarjeta: AnsiString; const Odometro: AnsiString; const Terminal: AnsiString): AnsiString; }
var
  nBomba: Integer;
  Tarjeta: AnsiString;
  Odometro: AnsiString;
  Terminal: AnsiString;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('nBomba', TypeInfo(Integer), nBomba, []);
    __Message.Read('Tarjeta', TypeInfo(AnsiString), Tarjeta, []);
    __Message.Read('Odometro', TypeInfo(AnsiString), Odometro, []);
    __Message.Read('Terminal', TypeInfo(AnsiString), Terminal, []);

    lResult := (__Instance as IServiceValesCupones).PrefijaTarjetaFrecuente(nBomba, Tarjeta, Odometro, Terminal);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'PrefijaTarjetaFrecuenteResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_GenerarFacturas(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GenerarFacturas(const Serie: AnsiString; const fol: Integer; const FechaCorte: DateTime; const FechaContable: DateTime;
                             const DiaFacturar: Integer; const Magna: Boolean; const Premium: Boolean; const Diesel: Boolean; const EmpleadoID: Integer): Integer; }
var
  Serie: AnsiString;
  fol: Integer;
  FechaCorte: DateTime;
  FechaContable: DateTime;
  DiaFacturar: Integer;
  Magna: Boolean;
  Premium: Boolean;
  Diesel: Boolean;
  EmpleadoID: Integer;
  lResult: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('fol', TypeInfo(Integer), fol, []);
    __Message.Read('FechaCorte', TypeInfo(DateTime), FechaCorte, [paIsDateTime]);
    __Message.Read('FechaContable', TypeInfo(DateTime), FechaContable, [paIsDateTime]);
    __Message.Read('DiaFacturar', TypeInfo(Integer), DiaFacturar, []);
    __Message.Read('Magna', TypeInfo(Boolean), Magna, []);
    __Message.Read('Premium', TypeInfo(Boolean), Premium, []);
    __Message.Read('Diesel', TypeInfo(Boolean), Diesel, []);
    __Message.Read('EmpleadoID', TypeInfo(Integer), EmpleadoID, []);

    lResult := (__Instance as IServiceValesCupones).GenerarFacturas(Serie, fol, FechaCorte, FechaContable, DiaFacturar, Magna, Premium, Diesel, EmpleadoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'GenerarFacturasResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_EliminaFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function EliminaFactura(const Folio: Integer; const Serie: AnsiString): Boolean; }
var
  Folio: Integer;
  Serie: AnsiString;
  lResult: Boolean;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);

    lResult := (__Instance as IServiceValesCupones).EliminaFactura(Folio, Serie);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'EliminaFacturaResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_CambioFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CambioFactura(const Serie: AnsiString; const Folio: Integer; const NuevaSerie: AnsiString; const NuevoFolio: Integer;
                           const FechaImpresion: DateTime): AnsiString; }
var
  Serie: AnsiString;
  Folio: Integer;
  NuevaSerie: AnsiString;
  NuevoFolio: Integer;
  FechaImpresion: DateTime;
  lResult: AnsiString;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);
    __Message.Read('NuevaSerie', TypeInfo(AnsiString), NuevaSerie, []);
    __Message.Read('NuevoFolio', TypeInfo(Integer), NuevoFolio, []);
    __Message.Read('FechaImpresion', TypeInfo(DateTime), FechaImpresion, [paIsDateTime]);

    lResult := (__Instance as IServiceValesCupones).CambioFactura(Serie, Folio, NuevaSerie, NuevoFolio, FechaImpresion);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'CambioFacturaResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_DatosFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosFactura(const Folio: Integer; const Serie: AnsiString): Boolean; }
var
  Folio: Integer;
  Serie: AnsiString;
  lResult: Boolean;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);

    lResult := (__Instance as IServiceValesCupones).DatosFactura(Folio, Serie);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'DatosFacturaResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_GeneraFacturasXCliente(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GeneraFacturasXCliente(const ClienteID: Integer; const Productos: AnsiString; const FechaCorte: DateTime; const FechaContable: DateTime;
                                    const Serie: AnsiString; const aFolio: Integer; const EmpleadoID: Integer): Integer; }
var
  ClienteID: Integer;
  Productos: AnsiString;
  FechaCorte: DateTime;
  FechaContable: DateTime;
  Serie: AnsiString;
  aFolio: Integer;
  EmpleadoID: Integer;
  lResult: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('Productos', TypeInfo(AnsiString), Productos, []);
    __Message.Read('FechaCorte', TypeInfo(DateTime), FechaCorte, [paIsDateTime]);
    __Message.Read('FechaContable', TypeInfo(DateTime), FechaContable, [paIsDateTime]);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('aFolio', TypeInfo(Integer), aFolio, []);
    __Message.Read('EmpleadoID', TypeInfo(Integer), EmpleadoID, []);

    lResult := (__Instance as IServiceValesCupones).GeneraFacturasXCliente(ClienteID, Productos, FechaCorte, FechaContable, Serie, aFolio, EmpleadoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'GeneraFacturasXClienteResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceValesCupones_Invoker.Invoke_GasolineroID(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GasolineroID: Integer; }
var
  lResult: Integer;
begin
  CheckRoles(__Instance, GetDefaultServiceRoles);
  try
    lResult := (__Instance as IServiceValesCupones).GasolineroID;

    __Message.InitializeResponseMessage(__Transport, 'LibraryValesCupones', 'ServiceValesCupones', 'GasolineroIDResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

initialization
end.
